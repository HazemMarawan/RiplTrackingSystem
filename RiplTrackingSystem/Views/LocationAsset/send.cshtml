@model IEnumerable<RiplTrackingSystem.ViewModel.AssetViewModel>
@{
    ViewBag.Title = "Send Asset";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div class="modal fade" id="send_assets_modal" tabindex="-1" role="dialog" aria-hidden="true">
    <form action="" method="post" enctype='multipart/form-data'>
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modal_title"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <div class="form-row">
                            <input type="hidden" name="id" id="id" value="0" />
                            <div class="form-group col-md-6" style="display:none;">
                                <label>Assets</label>
                                <input required name="assets" id="assets" type="text" class="form-control radius-30" />
                            </div>
                            <div class="form-group col-md-12">
                                @Html.DropDownList("location_id", new SelectList(ViewBag.locations, "id", "name"), "Select Location", new { @class = "form-control", @name = "location_id", @id = "location_id", @required = "required" })
                            </div>
                            <div class="form-group col-md-12">
                                <label>Attachments</label>
                                <input name="attachments" id="attachments" type="file" multiple class="form-control radius-30" />
                            </div>
                            @if (ViewBag.isRIPL)
                            {<!-- i cleared  labels nothing useful by AA -->
                                <div class="form-group col-md-6">
                                    <label></label>
                                    <input type="date" name="start_date" id="start_date" required class="form-control radius-30" />
                                </div>
                                <div class="form-group col-md-6">
                                    <label></label>
                                    <input type="date" name="due_date" id="due_date" required class="form-control radius-30" />
                                </div>
                            }
                            else
                            {
                                <div class="form-group col-md-6">
                                    <label>Working Date</label>
                                    <input type="date" name="working_date" id="working_date" required class="form-control radius-30" />
                                </div>
                            }

                            <div class="form-group col-md-12">
                                <label>Note</label>
                                <input required type="text" name="notes" id="notes" class="form-control radius-30" />
                            </div>

                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" id="modal_submit" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </form>
</div>

<div class="page-header">
    <nav class="breadcrumb-one" aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="javascript:void(0);">Send Assets</a></li>
        </ol>
    </nav>
</div>

<div class="row">
    <div class="form-group col-3">
        <input class="form-control" type="number" id="asset_id" name="asset_id" placeholder="Search">
    </div>
    @if (ViewBag.canSendPluck)
    {
        <div class="form-group col-3">
            <input class="form-control" type="number" min="1" max="@Model.Count()" id="sent_asset_count" name="sent_asset_count" placeholder="Number of Send Assets">
        </div>
    }
    <div class="form-group col-2">
        <button id="send" class="btn btn-primary px-3 radius-30">Send</button>
    </div>
    <div class="col-4">
        <div class="counter-content">
            <h1 class="ico-counter1 ico-counter"><span id="sentAssetsCounter">0</span> of @Model.Count()</h1>
        </div>
    </div>
</div>
    <div class="card">
        <div class="card-body">
            <!-- class added avaiableAssets-edit and removed other additional classes  by AA -->
            <table id="assetsTable" class="table avaiableAssets-edit " style="width:100%">
                <thead>
                    <tr>
                        <th><input type='checkbox' class='checkALL' id="checkAll" /></th>
                        <th>#</th>
                        <th>Type</th>
                        <th>Tag ID</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var asset in Model)
                    {
                        <tr>
                            <td><input type='checkbox' class='checkedAsset' id="@asset.tag_id" value='@asset.id'></td>
                            <td>@asset.id</td>
                            <td>@asset.type</td>
                            <td>@asset.tag_id</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
@section scripts
{
    <script>
        $(document).ready(function () {
            assetArray = [];
            var array = @Html.Raw(Json.Encode(@Model));
            for(var i = 0; i < array.length; i++) {
                assetArray[i] = array[i].tag_id;
            }

            $("#asset_id").change(function () {
                if(assetArray.includes($("#asset_id").val())) {
                    $("#" + $("#asset_id").val()).prop('checked', true);
                    $("#asset_id").val("");
                    $("#asset_id").focus();
                    updateCounter();
                }
                else {
                    Swal.fire({
                        icon: "error",
                        title: "Not Found!",
                        text: "Transaction Doesn't Contain this Asset"
                    });
                }

            });
            $("#checkAll").click(function () {
                if ($('#checkAll').is(":checked")) {
                    
                    $(".checkAll").prop('checked', true);
                    $(".checkedAsset").prop('checked', true);
                    updateCounter();
                } else {

                    $("#checkAll").prop('checked', false);
                    $(".checkedAsset").prop('checked', false);
                    updateCounter();
                }

            });
            $("#sent_asset_count").change(function () {

                var selectedAsset = $(this).val();
                if (assetArray.length > 0) {
                    assetArray.forEach(function (value) {
                        $("#" + value).prop('checked', false);
                    })
                    if (selectedAsset <= @Model.Count()) {
                        var counter = 0;
                        assetArray.forEach(function (value) {
                            counter++;
                            if (counter <= selectedAsset) {
                                $("#" + value).prop('checked', true);
                                updateCounter();
                            }
                            else {
                                return false;

                            }
                        })
                        Swal.fire({
                            icon: "success",
                            title: "Done",
                            text: selectedAsset+ " Asset has been Selected."
                        });
                    }
                    else {
                        $(this).val("");
                        Swal.fire({
                            icon: "warning",
                            title: "Not Done Yet!",
                            text: "You Try To Select Asset More Than You Have!"
                        });
                    }
                }

            });
            $("#send").click(function () {

                var checkedVals = $('.checkedAsset:checkbox:checked').map(function () {
                    return this.value;
                }).get();

                var modal = $('#send_assets_modal').clone();
                var action = '@Url.Action("sendAssets", "LocationAsset")';
                modal.find('form').attr('action', action);
                modal.find('#modal_title').text('Send Asset');
                modal.execModal({
                    progressBar: 'progress_bar',
                    progressText: 'progress_text',
                }, function (data) {
                        Swal.fire({
                            icon: "success",
                            title: "Done",
                            text: "Asset has been sent"
                        });
                        location.reload();

                }, function (response) {

                }, function (dialog) {
                        dialog.find('#assets').val(checkedVals.join(","));

                        dialog.find("#modal_submit").click(function () {
                            if (dialog.find("#start_date").val() >= dialog.find("#due_date").val()) {
                                Swal.fire({
                                    icon: "danger",
                                    title: "Error",
                                    text: "Start Date Must Be Less Than Due Date"
                                });
                            }
                        });


                });
            });

            function updateCounter() {
                var checkedVals = $('.checkedAsset:checkbox:checked').map(function () {
                    return this.value;
                }).get();

                $("#sentAssetsCounter").text(checkedVals.length);
            }

            $(".checkedAsset").click(function () {
                updateCounter();
            });

        });
    </script>
}

